{"version":3,"sources":["component/rupiahtobtc.js","component/btctorupiah.js","component/btcinfo.js","App.js","serviceWorker.js","index.js"],"names":["rupiahtobtc","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","numbah","hehe","setState","refs","angka","value","_this2","blaha","axios","get","then","url","data","react_default","a","createElement","ref","type","onInput","masuk","Component","btctorupiah","USD","last","nilairupiah","btcinfo","audsell","audbuy","eurosell","eurobuy","gbpbuy","gbpsell","jpybuy","jpysell","usdbuy","usdsell","fetch","console","log","AUD","sell","buy","EUR","GBP","JPY","css","border","padding","style","App","Link","to","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9abecace.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass rupiahtobtc extends Component {\r\n  constructor(){\r\n    super()\r\n    this.state = {numbah: 0, hehe: 0,}\r\n  }\r\n  masuk(){\r\n    this.setState({numbah: this.refs.angka.value})\r\n  }\r\n  \r\n  render() {\r\n    let blaha = 'https://blockchain.info/tobtc?currency=USD&value=' + this.state.numbah / 14000\r\n    axios.get(blaha).then((url) => {this.setState({ hehe: url.data})})\r\n\r\n    return (\r\n      <div><center>\r\n       <h1>Konversi Rupiah ke Bitcoin</h1>\r\n       <h3> Kurs 1 USD = 14.000 IDR</h3>\r\n       <input ref=\"angka\" type=\"number\" onInput={()=>{this.masuk();}}/>\r\n       <h1>Rp {this.state.numbah} = BTC {this.state.hehe}</h1>\r\n       </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default rupiahtobtc;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass btctorupiah extends Component {\r\n  constructor(){\r\n    super()\r\n    this.state = {numbah: 0, hehe: 0,}\r\n  }\r\n  masuk(){\r\n    this.setState({numbah: this.refs.angka.value})\r\n  }\r\n  \r\n  render() {\r\n    let blaha = 'https://blockchain.info/ticker' ;\r\n    axios.get(blaha).then((url) => {this.setState({ hehe: url.data.USD.last})});\r\n    let nilairupiah = this.state.hehe * this.state.numbah * 14000\r\n\r\n    return (\r\n      <div><center>\r\n       <h1>Konversi Bitcoin ke Rupiah</h1>\r\n       <h3> Kurs 1 USD = 14.000 IDR</h3>\r\n       <input ref=\"angka\" type=\"number\" onInput={()=>{this.masuk();}}/>\r\n       <h1>BTC {this.state.numbah} = Rp {nilairupiah}</h1>\r\n       </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default btctorupiah;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass btcinfo extends Component {\r\n    constructor() { \r\n        super(); \r\n        this.state = { audsell: '', audbuy: '', eurosell: '', eurobuy: '', gbpbuy: '', gbpsell: '' , jpybuy: '', jpysell: '', usdbuy: '', usdsell: '' }; \r\n      } \r\n\r\n    componentDidMount(){ \r\n        axios.get('https://blockchain.info/ticker') \r\n        .then((fetch) => \r\n        { console.log(fetch); console.log(fetch.data.AUD.sell); this.setState({ audsell: fetch.data.AUD.sell, audbuy: fetch.data.AUD.buy, eurosell: fetch.data.EUR.sell, eurobuy: fetch.data.EUR.buy, gbpbuy: fetch.data.GBP.buy, gbpsell: fetch.data.GBP.sell , jpybuy: fetch.data.JPY.buy, jpysell: fetch.data.JPY.sell, usdbuy: fetch.data.USD.buy, usdsell: fetch.data.USD.sell }) }) };\r\n  render() {\r\n    var css = {border:'1px solid black', padding:'12px'} \r\n    return (\r\n      <div>\r\n          <center>\r\n              <h1>Harga Bitcoin Hari Ini</h1> \r\n                <table style={css}> \r\n                <tbody> <tr> \r\n                <th>Mata Uang</th> \r\n                <th>Harga Beli Bitcoin</th> \r\n                <th>Harga Jual Bitcoin</th> \r\n                </tr> \r\n                <tr> \r\n                <td style={css}>Australian Dollar</td> \r\n                <td style={css}>{this.state.audbuy}</td> \r\n                <td style={css}>{this.state.audsell}</td>\r\n                </tr> \r\n                <tr>\r\n                <td style={css}>European Euro</td> \r\n                <td style={css}>{this.state.eurobuy}</td> \r\n                <td style={css}>{this.state.eurosell}</td>\r\n                </tr> \r\n                <tr>\r\n                <td style={css}>British Pounds </td> \r\n                <td style={css}>{this.state.gbpbuy}</td> \r\n                <td style={css}>{this.state.gbpsell}</td>\r\n                </tr> \r\n                <tr>\r\n                <td style={css}>Japanese Yen</td> \r\n                <td style={css}>{this.state.jpybuy}</td> \r\n                <td style={css}>{this.state.jpysell}</td>\r\n                </tr> \r\n                <tr>\r\n                <td style={css}>US Dollar</td> \r\n                <td style={css}>{this.state.usdbuy}</td> \r\n                <td style={css}>{this.state.usdsell}</td>\r\n                </tr> \r\n                </tbody> \r\n                </table> \r\n          </center>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default btcinfo;","import React, { Component } from 'react';\nimport './App.css';\nimport { Link, Route } from 'react-router-dom';\nimport rupiahtobtc from './component/rupiahtobtc';\nimport btctorupiah from './component/btctorupiah';\nimport btcinfo from './component/btcinfo';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n       <h1>Crypto Kini</h1>\n      <ul> \n        <li><Link to=\"/\">Home</Link></li>\n        <li><Link to=\"/rupiahtobtc\">Rupiah to BTC</Link></li> \n        <li><Link to=\"/btctorupiah\">BTC to Rupiah</Link></li>\n        <li><Link to=\"/btcinfo\">BTC Info</Link></li> \n      </ul>\n      <div> <Route exact path=\"/\" component={'Home'}/> \n      <Route path=\"/rupiahtobtc\" component={rupiahtobtc}/> \n      <Route path=\"/btctorupiah\" component={btctorupiah}/> \n      <Route path=\"/btcinfo\" component={btcinfo}/> \n      </div> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}